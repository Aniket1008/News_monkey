{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\News_monky\\\\my-app\\\\src\\\\components\\\\News.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NewsItem from './NewsItem';\nimport Loader from './Loader';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst News = props => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0);\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  const updateNews = async () => {\n    // props.setProgress(10);\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=6d93827683a049eba178e597bd370207&page-1&pageSize=${props.pageSize}`;\n    setLoading(true);\n    let data = await fetch(url);\n    // props.setProgress(30);\n    let parsedata = await data.json();\n    // props.setProgress(70);\n    setArticles(parsedata.articles);\n    setTotalResults(parsedata.totalResults);\n    setLoading(false);\n    // props.setProgress(100)\n    setLoading(false);\n  };\n  useEffect(() => {\n    updateNews();\n  }, []);\n\n  //  const handlePrevClick = async ()=>{\n  //   setPage(page-1)\n  //   updateNews()\n  //   }\n\n  // const  handleNextClick = async ()=>{\n  //   updateNews()\n  //   setPage(page+1)\n  //   }\n\n  const fetchMoreData = async () => {\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=6d93827683a049eba178e597bd370207&page=${page + 1}&pageSize=${props.pageSize}`;\n    setPage(page + 1);\n    let data = await fetch(url);\n    let parsedata = await data.json();\n    setArticles(articles.concat(parsedata.articles));\n    setTotalResults(parsedata.totalResults);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      style: {\n        margin: '35px 0px',\n        marginTop: '90px'\n      },\n      children: [\"NewsMonkey - Top \", capitalizeFirstLetter(props.category), \" Headlines\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: articles.length,\n      next: fetchMoreData,\n      hasMore: articles.length !== totalResults,\n      loader: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: articles.map(element => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4 mb-2\",\n              children: /*#__PURE__*/_jsxDEV(NewsItem, {\n                title: element.title,\n                discription: element.description,\n                imgUrl: element.urlToImage,\n                newsUrl: element.url,\n                author: element.author,\n                date: element.publishedAt,\n                source: element.source.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 13\n              }, this)\n            }, element.url, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 20\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(News, \"DJGT5z9fcO00SGn/4yt1PHL84Ps=\");\n_c = News;\nNews.defaultProps = {\n  country: 'in',\n  pageSize: 8,\n  category: 'general'\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default News;\n\n// import React, { Component } from 'react'\n// import NewsItem from './NewsItem'\n// import Loader from './Loader'\n// import PropTypes from 'prop-types'\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n\n// export class News extends Component {\n//    static defaultProps = {\n//      country : 'in',\n//      pageSize : 8,\n//      category : 'general'\n//    }\n\n//    static propTypes = {\n//     country : PropTypes.string,\n//     pageSize : PropTypes.number,\n//     category : PropTypes.string\n//   }\n\n//   capitalizeFirstLetter =(string)=>{\n//     return string.charAt(0).toUpperCase() + string.slice(1)\n//   }\n\n//     constructor(props){\n//         super(props);\n//         this.state ={\n//             articles:[],\n//             loading:false,\n//             page:1,\n//             totalResults : 0\n//         }\n//         document.title = `${this.capitalizeFirstLetter(props.category)} - NewsMonkey`;\n//     }\n\n//     async updateNews(){\n//       let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=6d93827683a049eba178e597bd370207&page-1&pageSize=${props.pageSize}`\n//       this.setState({loading:true});\n//       let data = await fetch(url);\n//       let parsedata = await data.json();\n//       console.log(parsedata);\n//       this.setState({\n//         articles:parsedata.articles , \n//         totalResults: parsedata.totalResults,\n//         loading:false\n//       })\n//     }\n\n//     async componentDidMount(){\n//       this.updateNews()\n//     }\n\n//     fetchData = async () =>{\n//       this.setState({page : this.state.page+1})\n//       let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=6d93827683a049eba178e597bd370207&page-1&pageSize=${props.pageSize}`\n//       this.setState({loading:true});\n//       let data = await fetch(url);\n//       let parsedata = await data.json();\n//       console.log(parsedata);\n//       this.setState({\n//         articles:this.state.articles.concat(parsedata.articles) , \n//         totalResults: parsedata.totalResults,\n//         loading:false\n//       })\n//     }\n\n//     // handlePrevClick= async ()=>{\n//     //   this.setState({page:this.state.page - 1})\n//     //   this.updateNews()\n//     // }\n\n//     // handleNextClick= async ()=>{\n//     // this.setState({page:this.state.page - 1})\n//     // this.updateNews()\n\n//     // }\n\n//   render() {\n//     return (\n//         <>\n//       <div className='container my-3'>\n//         <h1 className='text-center my-3'>NewMonkey - Top {this.capitalizeFirstLetter(props.category)} Headlines</h1>\n//         {/* {this.state.loading && <Loader/>} */}\n//         <InfiniteScroll\n//           dataLength={this.state.articles.length}\n//           next={this.fetchMoreData}\n//           hasMore={this.state.articles.length !== this.state.totalResults}\n//           loader={<Loader/>}\n//         >\n//           <div className=\"container\">\n//         <div className=\"row\"> \n//             {!this.state.loading && this.state.articles.map((element)=>{\n//             return <div className=\"col-md-4 mb-2\" key={element.url}>\n//             <NewsItem  title={element.title} discription={element.description} imgUrl={element.urlToImage}\n//             newsUrl={element.url} author={element.author} date={element.publishedAt}  source={element.source.name} />\n//             </div>\n//             })}\n//         </div></div>\n//         </InfiniteScroll>\n//        </div>\n\n//        {/* <div className=\"container d-flex justify-content-between mb-4\">\n//             <button disabled={this.state.page<=1} className=\"btn btn-dark\" onClick={this.handlePrevClick}> &larr; Previous</button>\n//             <button disabled={this.state.page + 1 > Math.ceil(this.state.totalResults/props.pageSize)} className=\"btn btn-dark\" onClick={this.handleNextClick}>Next &rarr;</button>\n//         </div> */}\n//         </>\n//     )\n//   }\n// }\n\n// export default News\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","NewsItem","Loader","PropTypes","InfiniteScroll","jsxDEV","_jsxDEV","Fragment","_Fragment","News","props","_s","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalResults","capitalizeFirstLetter","string","charAt","toUpperCase","slice","updateNews","url","country","category","pageSize","data","fetch","parsedata","json","fetchMoreData","concat","children","className","style","margin","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","length","next","hasMore","loader","map","element","title","discription","description","imgUrl","urlToImage","newsUrl","author","date","publishedAt","source","name","_c","defaultProps","propTypes","number","$RefreshReg$"],"sources":["D:/Desktop/News_monky/my-app/src/components/News.js"],"sourcesContent":["import React, { useEffect , useState } from 'react'\r\nimport NewsItem from './NewsItem'\r\nimport Loader from './Loader'\r\nimport PropTypes from 'prop-types'\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n\r\nconst News = (props) => {\r\n\r\n  const [articles, setArticles] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [page, setPage] = useState(1)\r\n  const [totalResults, setTotalResults] = useState(0)\r\n\r\n const capitalizeFirstLetter =(string)=>{\r\n    return string.charAt(0).toUpperCase() + string.slice(1)\r\n  }\r\n\r\n\r\n\r\n    const updateNews = async ()=>{\r\n      // props.setProgress(10);\r\n      let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=6d93827683a049eba178e597bd370207&page-1&pageSize=${props.pageSize}`\r\n      setLoading(true);\r\n      let data = await fetch(url);\r\n      // props.setProgress(30);\r\n      let parsedata = await data.json();\r\n      // props.setProgress(70);\r\n      setArticles(parsedata.articles)\r\n      setTotalResults(parsedata.totalResults)\r\n      setLoading(false)\r\n      // props.setProgress(100)\r\n      setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n      updateNews()\r\n    }, [])\r\n    \r\n\r\n\r\n  //  const handlePrevClick = async ()=>{\r\n  //   setPage(page-1)\r\n  //   updateNews()\r\n  //   }\r\n\r\n  // const  handleNextClick = async ()=>{\r\n  //   updateNews()\r\n  //   setPage(page+1)\r\n  //   }\r\n\r\n    const fetchMoreData = async () =>{\r\n      let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=6d93827683a049eba178e597bd370207&page=${page+1}&pageSize=${props.pageSize}`\r\n      setPage(page+1)\r\n      let data = await fetch(url);\r\n      let parsedata = await data.json();\r\n      setArticles(articles.concat(parsedata.articles))\r\n      setTotalResults(parsedata.totalResults)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <h1 className='text-center' style={{margin:'35px 0px', marginTop:'90px'}}>\r\n          NewsMonkey - Top {capitalizeFirstLetter(props.category)} Headlines</h1>\r\n        <InfiniteScroll\r\n          dataLength={articles.length}\r\n          next={fetchMoreData}\r\n          hasMore={articles.length !== totalResults}\r\n          loader={<Loader/>}\r\n        >\r\n          <div className=\"container\">\r\n        <div className=\"row\"> \r\n            { articles.map((element)=>{\r\n            return <div className=\"col-md-4 mb-2\" key={element.url}>\r\n            <NewsItem  title={element.title} discription={element.description} imgUrl={element.urlToImage}\r\n            newsUrl={element.url} author={element.author} date={element.publishedAt}  source={element.source.name} />\r\n            </div>\r\n            })}\r\n        </div></div>\r\n        </InfiniteScroll>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nNews.defaultProps = {\r\n  country : 'in',\r\n  pageSize : 8,\r\n  category : 'general'\r\n}\r\n\r\n\r\nNews.propTypes = {\r\n country : PropTypes.string,\r\n pageSize : PropTypes.number,\r\n category : PropTypes.string\r\n}\r\n\r\nexport default News\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { Component } from 'react'\r\n// import NewsItem from './NewsItem'\r\n// import Loader from './Loader'\r\n// import PropTypes from 'prop-types'\r\n// import InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\n\r\n// export class News extends Component {\r\n//    static defaultProps = {\r\n//      country : 'in',\r\n//      pageSize : 8,\r\n//      category : 'general'\r\n//    }\r\n\r\n\r\n//    static propTypes = {\r\n//     country : PropTypes.string,\r\n//     pageSize : PropTypes.number,\r\n//     category : PropTypes.string\r\n//   }\r\n\r\n//   capitalizeFirstLetter =(string)=>{\r\n//     return string.charAt(0).toUpperCase() + string.slice(1)\r\n//   }\r\n\r\n//     constructor(props){\r\n//         super(props);\r\n//         this.state ={\r\n//             articles:[],\r\n//             loading:false,\r\n//             page:1,\r\n//             totalResults : 0\r\n//         }\r\n//         document.title = `${this.capitalizeFirstLetter(props.category)} - NewsMonkey`;\r\n//     }\r\n\r\n//     async updateNews(){\r\n//       let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=6d93827683a049eba178e597bd370207&page-1&pageSize=${props.pageSize}`\r\n//       this.setState({loading:true});\r\n//       let data = await fetch(url);\r\n//       let parsedata = await data.json();\r\n//       console.log(parsedata);\r\n//       this.setState({\r\n//         articles:parsedata.articles , \r\n//         totalResults: parsedata.totalResults,\r\n//         loading:false\r\n//       })\r\n//     }\r\n\r\n//     async componentDidMount(){\r\n//       this.updateNews()\r\n//     }\r\n    \r\n//     fetchData = async () =>{\r\n//       this.setState({page : this.state.page+1})\r\n//       let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=6d93827683a049eba178e597bd370207&page-1&pageSize=${props.pageSize}`\r\n//       this.setState({loading:true});\r\n//       let data = await fetch(url);\r\n//       let parsedata = await data.json();\r\n//       console.log(parsedata);\r\n//       this.setState({\r\n//         articles:this.state.articles.concat(parsedata.articles) , \r\n//         totalResults: parsedata.totalResults,\r\n//         loading:false\r\n//       })\r\n//     }\r\n\r\n\r\n//     // handlePrevClick= async ()=>{\r\n//     //   this.setState({page:this.state.page - 1})\r\n//     //   this.updateNews()\r\n//     // }\r\n\r\n//     // handleNextClick= async ()=>{\r\n//     // this.setState({page:this.state.page - 1})\r\n//     // this.updateNews()\r\n\r\n\r\n//     // }\r\n    \r\n//   render() {\r\n//     return (\r\n//         <>\r\n//       <div className='container my-3'>\r\n//         <h1 className='text-center my-3'>NewMonkey - Top {this.capitalizeFirstLetter(props.category)} Headlines</h1>\r\n//         {/* {this.state.loading && <Loader/>} */}\r\n//         <InfiniteScroll\r\n//           dataLength={this.state.articles.length}\r\n//           next={this.fetchMoreData}\r\n//           hasMore={this.state.articles.length !== this.state.totalResults}\r\n//           loader={<Loader/>}\r\n//         >\r\n//           <div className=\"container\">\r\n//         <div className=\"row\"> \r\n//             {!this.state.loading && this.state.articles.map((element)=>{\r\n//             return <div className=\"col-md-4 mb-2\" key={element.url}>\r\n//             <NewsItem  title={element.title} discription={element.description} imgUrl={element.urlToImage}\r\n//             newsUrl={element.url} author={element.author} date={element.publishedAt}  source={element.source.name} />\r\n//             </div>\r\n//             })}\r\n//         </div></div>\r\n//         </InfiniteScroll>\r\n//        </div>\r\n       \r\n//        {/* <div className=\"container d-flex justify-content-between mb-4\">\r\n//             <button disabled={this.state.page<=1} className=\"btn btn-dark\" onClick={this.handlePrevClick}> &larr; Previous</button>\r\n//             <button disabled={this.state.page + 1 > Math.ceil(this.state.totalResults/props.pageSize)} className=\"btn btn-dark\" onClick={this.handleNextClick}>Next &rarr;</button>\r\n//         </div> */}\r\n//         </>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default News"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}